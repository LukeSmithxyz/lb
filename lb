#!/usr/bin/env bash
# Set your personal data below. See other variables defined later
# (e.g. header, SITE) for more customizability
RSSFILE="${RSSFILE:-rss.xml}"
INDEX="${INDEX:-index.html}"
SITE="https://${SITE:-$HOSTNAME}/"
STYLESHEET="..\\/${STYLESHEET:-style.css}" # Characters should be escaped for this variable.
AUTHOR="<a href=\"$SITE\">${AUTHOR:-$USER}<\\/a>"
set -e  # Error out on failure
getHelp() {
	cat <<- EOF
	Usage: 'new': create new draft; 'finalize': finish draft and add it to the RSS and HTML page; 'delete': delete a finished page.
	This system will take the blog entries you write and add them into the RSS file and HTML file of your choosing. Set which files to use by editing the 'lb' file directly and changing the variables at the top.
	To fully prepare these files, add the following line to both files where you want the content to be added:

	<!-- LB -->

	As you finalize posts, they will be appended in the appropriate format below that line.
	Blog posts are be stored in 'blog/' and drafts in 'blog/.drafts/'. To delete drafts, you only need delete their .html files directly, but use the 'lb delete' command to remove finalized posts since they appear in three places.
	EOF
}
listandReturn() {
	echo "Listing contents of $1:"
        list="$(find "$1" -maxdepth 1 -type f -name "*.html" | nl -s ':')" && echo "$list"
	read -rp "Pick an entry by number to $2, or press ctrl-c to cancel. " number
        file="$(awk -F":" 'NR == '"$number"'{print $2}' <<< "$list")"
}
getTitle() {
	echo "Post will be stored as draft in $PWD/blog/.drafts until finalized."
	read -rp "Give a title for your post: " title
	url="$(echo "$title" | sed -e "s/[]['\"=+_,:;?\\!@*&()<>]//g;s/ /-/g" | tr '[:upper:]' '[:lower:]')"
}
postNew() {
	mkdir -p "$PWD/blog/.drafts"
	printf "%s\\n%s\\n\\n%s" "<h2 id='$url'>$title</h2>" "<small>[<a href=\"$INDEX#$url\">link</a>&mdash;<a href=\"blog/$url.html\">standalone</a>]</small>" "<++>" \
	>> "$PWD/blog/.drafts/$url.html" && $EDITOR "$PWD/blog/.drafts/$url.html"
}
finalize() {
	listandReturn "$PWD/blog/.drafts" finalize
	url="$(grep -o "<h2 id='\\(.\\)*'>" "$file" | cut -d "'" -f2)"
	title="$(grep -o "<h2 id='\\(.\\)*h2>" "$file" | sed -e 's/<[^>]*>//g')"
	echo "AddDescription \"$title\" ${file##*/}" >> "$PWD/blog/.htaccess"
	date=$(date '+%a, %d %b %Y %H:%M:%S %z')
	tmpdir=$(mktemp -d)
	printf "\\n%s\\n%s\\n%s\\n%s\\n%s\\n%s\\n%s\\n%s\\n" "<item>" "<title>$title</title>" "<guid>$SITE$INDEX#$url</guid>" "<pubDate>$date</pubDate>" \
		"<description><![CDATA[" "$(<"$file")" "]]></description>" "</item>" > "$tmpdir/rss.xml"
	printf "\\n%s\\n%s\\n%s\\n%s\\n" "<div class=\"entry\">" "$(<"$file")" "<small>$date</small>" "</div>" > "$tmpdir/html.html"
	sed -i "/<!-- LB -->/r $tmpdir/html.html" "$INDEX"
	sed -i "/<!-- LB -->/r $tmpdir/rss.xml" "$RSSFILE"
	header="<html>\\n<head>\\n<title>$title<\\/title>\\n<link rel='stylesheet' type='text\\/css' href='$STYLESHEET'>\\n<meta charset='utf-8'\\/>\\n<\\/head>\\n<body>"
	footer="<\\/body>\\n<footer>by <strong>$AUTHOR<\\/strong><\\/footer>\\n<\\/html>"
	sed  "s/href=\"/href=\"..\\//g;s/\\.\\.\\/http/http/g;0,/^/s//$header/;0,/<h2 id=/s//<h1 id=/;0,/h2>/s//h1>/;\$a$footer" "$file" > "$PWD/blog/${file##*/}"
	rm "$file"
}
delete() {
	listandReturn "$PWD/blog/" "delete"
        base="$(basename "$(echo "$file" | cut -f1 -d'.')")"
	read -rp "Really delete \"$base\"? [y/N] " choice
	[[ $choice =~ [Yy] ]] || exit
	rm "$file" && echo "Blog post deleted from directories." 
	sed -i "/<item/{:a;N;/<\\/item>/!ba};/$base/d" "$RSSFILE" && echo "Entry removed from $RSSFILE."
	sed -i "/<div/{:a;N;/<\\/div>/!ba};/$base/d" "$INDEX" && echo "HTML code removed from $INDEX."
        sed -i "/$base/d" "$PWD/blog/.htaccess" && echo "Entry removed from .htaccess"
}
case "$1" in
	new) getTitle && postNew ;;
	finalize) finalize ;;
	delete) delete ;;
	*) getHelp ;;
esac
