#!/bin/bash
name="Luke Smith"
webdir=$PWD
website="https://lukesmith.xyz/" # Keep a trailing slash.
css="../style.css"
blogfile="2019.html"
indexfile="blogindex.html"
rssfile="rss.xml"
[ -z "$EDITOR" ] && EDITOR="vim"

err() {
	printf 'Error: %s\n' "$@"
	exit 1
}

if [ ! -d "$webdir/blog/.drafts" ]; then
	if read -erp "Initialize blog in $webdir?" ask; then
		if [ "$ask" = "y" ]; then
			printf "Initializing blog system...\\n"
			mkdir -pv -- "$webdir/blog/.drafts" \
				|| err "Do you have write permissions in this directory?"
			echo "Options +Indexes" > "$webdir/blog/.htaccess"
		else
			exit
		fi
	fi
fi

usage() {
	cat <<EOF
		lb blog system by Luke Smith <luke@lukesmith.xyz>
Usage:
  $0 n:\tnew draft
  $0 e:\tedit draft
  $0 p:\tpublish/finalize draft
  $0 r:\trevise published entry
  $0 t:\tdiscard draft
  $0 d:\tdelete published entry

Be sure to have the following pattern added to your RSS feed, blog file and blog index:

<!-- LB -->

New content will be added directly below that sequence. This is required.
See https://github.com/LukeSmithxyz/lb for more.
EOF
}

newpost() {
	read -erp "Give a title for your post:\n" title
	echo "$title" | grep -q '"' \
		&& echo 'Double quotation marks (") are not allowed in entry titles.' \
		&& exit
	url=$(
		iconv -cf UTF-8 -t ASCII//TRANSLIT <<<"$title" \
		| tr -d '[:punct:]' \
		| tr '[:upper:] ' '[:lower:]-' \
		| sed "s/-\+/-/g;s/\(^-\|-\$\)//g"
	)

	printf 'AddDescription "%s" "%s.html"' "$title" "$url" >> "$webdir/blog/.htaccess" \
		|| err "Is htaccess writeable?"
	[ -f "$webdir/blog/.drafts/$url.html" ] \
		&& err "There is already an existing draft entry of that same name/URL."
	[ -f "$webdir/blog/$url.html" ] \
		&& err "There is already an existing published entry of that same name/URL."
	"$EDITOR" "$webdir/blog/.drafts/$url.html"
}

listandReturn() {
	printf 'Listing contents of %s.\n' "$1"
	select chosen in "$1"/*; do
		[[ $chosen ]] && break
	done
	basefile=${chose##*/}
	base="${basefile%.*}"
}

publish() {
	delete
	htaccessentry=$(grep -- "$basefile" "$webdir/blog/.htaccess")
	realname="$(cut -d'"' -f2 <<<"$htaccessentry")"
	rssdate="$(grep -- "$basefile" blog/.htaccess | sed 's/.*\.html\"* *#*//g' | tr -d '\n')"

	# RSS date formats must comply with standards to validate.
	[ -z "$rssdate" ] && rssdate="$(date '+%a, %d %b %Y %H:%M:%S %z')"

	# But this visible date you can set to any format.
	webdate="$(date '+%a, %d %b %Y %H:%M:%S %z')" 
	tmpdir=$(mktemp -d)

	cat <<EOF >"$webdir/blog/$basefile"
<html>
<head>
<title>$realname</title>
<link rel='stylesheet' type='text/css' href='$css'>
<meta charset='utf-8'/>
</head>
<body>
<h1>$realname</h1>
<small>[<a href='../$blogfile#$base'>link</a>&mdash;<a href='$basefile'>standalone</a>]</small>
$(<"$webdir/blog/.drafts/$basefile")
<footer>by <strong><a href='$website'>$name</a></strong></footer>
</body>

</html>
EOF
	cat <<EOF >"$tmpdir/rss"
<item>
<title>$realname</title>
<guid>$website$blogfile#$base</guid>
<pubDate>$rssdate</pubDate>
<description><![CDATA[
$(<"$webdir/blog/.drafts/$basefile")
]]></description>
</item>

EOF
	cat <<EOF >"$tmpdir/html"
<div class='entry'>
<h2 id='$base'>$realname</h2>
<small>[<a href='#$base'>link</a>&mdash;<a href='blog/$basefile'>standalone</a>]</small>
$(<"$webdir/blog/.drafts/$basefile")
<small>$webdate</small>
</div>
EOF
	printf '<li>%s &ndash; <a href="blog/%s">%s</a></li> ' \
		"$(date '+%Y %b %d')" "$basefile" "$realname" > "$tmpdir/index"

	sed -i "/<!-- LB -->/r $tmpdir/html" -- "$blogfile"
	sed -i "/<!-- LB -->/r $tmpdir/rss" -- "$rssfile"
	sed -i "/<!-- LB -->/r $tmpdir/index" -- "$indexfile"
	sed -i "/ \"$base.html\"/d" "$webdir/blog/.htaccess"
	printf 'AddDescription "%s" "%s" #%s\n' "$realname" "$basefile" "$rssdate" >> "$webdir/blog/.htaccess"
	rm -f -- "$webdir/blog/.drafts/$chosen"
}

confirm() {
	read -erp "Really $1 \"$base\"? (y/N) " choice \
		&& echo "$choice" | grep -qi "^y$"\
		|| exit
}

delete() {
	sed -i "/<item/{:a;N;/<\\/item>/!ba};/#$base.html<\\/guid/d" -- "$rssfile"
	sed -i "/<div/{:a;N;/<\\/div>/!ba};/id='$base'/d" -- "$blogfile"
	sed -i "/<li>.*<a href=\"blog\\/$base.html\">/d" -- "$indexfile"
	rm -- "$webdir/blog/$basefile" \
		&& echo "Old blog entry removed."
}

revise() {
	awk '/^<small>\[/{flag=1;next}/<footer>/{flag=0}flag' "$webdir/blog/$chosen" > "$webdir/blog/.drafts/$basefile"
	"$EDITOR" "$webdir/blog/.drafts/$basefile"
	echo "Revision stored in blog/.drafts. Publish as normal entry when desired."
}

case "$1" in
	n*) newpost ;;
	e*) listandReturn "$webdir"/blog/.drafts/ edit
		"$EDITOR" "$webdir/blog/.drafts/$chosen" ;;
	p*) listandReturn "$webdir"/blog/.drafts/ publish
		publish ;;
	t*) listandReturn "$webdir"/blog/.drafts/ trash
		confirm trash \
			&& rm -f -- "$webdir/blog/.drafts/$chosen" \
			&& sed -i "/ \"$base.html\"/d" -- "$webdir/blog/.htaccess"
			&& printf "Draft deleted.\\n" ;;
	d*) listandReturn "$webdir"/blog/ delete \
		&& confirm delete \
		&& delete \
		&& sed -i "/ \"$base.html\"/d" -- "$webdir/blog/.htaccess" ;;
	r*) listandReturn "$webdir"/blog/ revise
		&& revise ;;
	*) usage ;;
esac
